import { Hono } from 'hono'
import userRoute from './routes/user';
import { blogRoute } from './routes/blog';
import { cors } from 'hono/cors';


export const app = new Hono<{
  Bindings: {
      DATABASE_URL: string;
      JWT_SECRET: string;
  }
}>();
app.use('/*',cors())
app.route('/api/v1/user', userRoute)
app.route('/api/v1/blog', blogRoute)

export default app;








/*
here index.ts file/backend is not being written in express it is hono(or can say/write in cloudflare), which will eventually access the database
via connection pool. Prisma-accelerate is another offering of prisma that creates connection pool, that connection
pool url put in .toml file is accessed by this file(cloudflare) in order to connect to the database. Here prisma 
client in this edge environment(serverless) is connected with accelerate using the pool url from .toml file.

## Initially hono is given access to the .toml file using Bindings https://hono.dev/getting-started/cloudflare-workers.
context varible c, can be given access to external
## Tyescript begins to complain if dont explicitly define the types of Bindings bcz hono doesn't have the the permission
to the .toml directly,it doesn't know what gonna come environment vriable here .toml file https://hono.dev/helpers/adapter#env https://github.com/honojs/hono/issues/799
## In each route, prisma client is initialised to have autogenerated client which hono use to talk to db, for that 
prisma client connect to db via prisma accelerate(connection pool) using connection pool url.CAN THE PRISMA VARIABLE
BE EXTRACTED OUT IN GLOBAL SCOPE? ofc using middleware
## After each change in the schema file we need to create migration using npm prisma generate dev --name "",
for this prisma looks to .env files to have accces to the db via db url directly
## Then we generate client using npm generate client --no engine, https://console.prisma.io/clw7qpnfy000cw80veen8hs39/clw7r1ozv002ew80v1g6q68ym/clw7r1ozv002fw80vzw1t24mu/accelerate/setup
 */